<Project Sdk="Microsoft.NET.Sdk.Web">

    <PropertyGroup>
        <TargetFramework>net9.0</TargetFramework>
        <Nullable>enable</Nullable>
        <IsPackable>false</IsPackable>
        <SpaRoot>ClientApp\</SpaRoot>
        <SpaProxyServerUrl>https://localhost:4200</SpaProxyServerUrl>
        <SpaProxyLaunchCommand>npm start</SpaProxyLaunchCommand>
        <ImplicitUsings>enable</ImplicitUsings>
        <OutputType>Exe</OutputType>
        <RepositoryUrl>https://github.com/tnebes/zora</RepositoryUrl>
        <UserSecretsId>bb50b52f-6bdb-4a88-bc83-66f794733799</UserSecretsId>
    </PropertyGroup>

    <PropertyGroup>
        <GenerateDocumentationFile>true</GenerateDocumentationFile>
        <NoWarn>$(NoWarn);1591</NoWarn>
    </PropertyGroup>

    <ItemGroup>
        <PackageReference Include="AutoMapper" Version="13.0.1"/>
        <PackageReference Include="Bcrypt.Net-Next" Version="4.0.3"/>
        <PackageReference Include="Bogus" Version="35.6.1"/>
        <PackageReference Include="CryptoHelper" Version="4.0.0"/>
        <PackageReference Include="Dapper" Version="2.1.35"/>
        <PackageReference Include="FluentResults" Version="3.16.0"/>
        <PackageReference Include="Microsoft.AspNetCore.Authentication.JwtBearer" Version="9.0.0"/>
        <PackageReference Include="Microsoft.AspNetCore.SpaProxy" Version="7.0.4"/>
        <PackageReference Include="Microsoft.Data.SqlClient" Version="6.0.0-preview3.24332.3"/>
        <PackageReference Include="Microsoft.EntityFrameworkCore" Version="9.0.0"/>
        <PackageReference Include="Microsoft.EntityFrameworkCore.Design" Version="9.0.0">
            <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
            <PrivateAssets>all</PrivateAssets>
        </PackageReference>
        <PackageReference Include="Microsoft.EntityFrameworkCore.Proxies" Version="9.0.0"/>
        <PackageReference Include="Microsoft.EntityFrameworkCore.SqlServer" Version="9.0.0"/>
        <PackageReference Include="Microsoft.Extensions.Hosting" Version="9.0.2"/>
        <PackageReference Include="Microsoft.Extensions.Hosting.Systemd" Version="9.0.2"/>
        <PackageReference Include="Scrutor" Version="5.0.2"/>
        <PackageReference Include="Serilog" Version="4.2.0-dev-02330"/>
        <PackageReference Include="Serilog.AspNetCore" Version="8.0.3"/>
        <PackageReference Include="Serilog.Exceptions" Version="8.4.0"/>
        <PackageReference Include="Serilog.Settings.Configuration" Version="8.0.4"/>
        <PackageReference Include="Serilog.Sinks.Async" Version="2.1.0"/>
        <PackageReference Include="Serilog.Sinks.Console" Version="6.0.0"/>
        <PackageReference Include="Serilog.Sinks.File" Version="6.0.0"/>
        <PackageReference Include="Serilog.Sinks.SyslogMessages" Version="4.0.0"/>
        <PackageReference Include="Swashbuckle.AspNetCore" Version="7.1.0"/>
    </ItemGroup>

    <ItemGroup>
        <!-- Don't publish the SPA source files, but do show them in the project files list -->
        <Content Remove="$(SpaRoot)**"/>
        <None Remove="$(SpaRoot)**"/>
        <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**"/>
    </ItemGroup>

    <ItemGroup>
        <Folder Include="logs\"/>
    </ItemGroup>

    <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
        <!-- Ensure Node.js is installed -->
        <Exec Command="node --version" ContinueOnError="true">
            <Output TaskParameter="ExitCode" PropertyName="ErrorCode"/>
        </Exec>
        <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE."/>
        <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..."/>
        <Exec WorkingDirectory="$(SpaRoot)" Command="npm install"/>
    </Target>

    <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
        <Exec WorkingDirectory="$(SpaRoot)" Command="npm install --force"/>
        <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build -- --configuration production"/>
        <Exec WorkingDirectory="$(SpaRoot)" Command="cat npm-debug.log 2&gt; /dev/null || true" IgnoreExitCode="true"/>

        <!-- Include the newly-built files in the publish output -->
        <ItemGroup>
            <DistFiles Include="$(SpaRoot)dist\**; $(SpaRoot)dist-server\**"/>
            <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
                <RelativePath>wwwroot\%(RecursiveDir)%(FileName)%(Extension)</RelativePath>
                <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
                <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
            </ResolvedFileToPublish>
        </ItemGroup>
    </Target>
</Project>
